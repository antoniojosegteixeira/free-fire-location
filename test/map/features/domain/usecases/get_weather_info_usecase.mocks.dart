// Mocks generated by Mockito 5.3.2 from annotations
// in free_fire_location/test/map/features/domain/usecases/get_weather_info_usecase.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:free_fire_location/core/error/failures.dart' as _i6;
import 'package:free_fire_location/features/map/data/datasources/weather_info_datasource.dart'
    as _i2;
import 'package:free_fire_location/features/map/data/repositories/weather_info_repository_impl.dart'
    as _i4;
import 'package:free_fire_location/features/map/domain/entities/weather_entity.dart'
    as _i7;
import 'package:google_maps_flutter/google_maps_flutter.dart' as _i8;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeWeatherInfoDatasource_0 extends _i1.SmartFake
    implements _i2.WeatherInfoDatasource {
  _FakeWeatherInfoDatasource_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [WeatherInfoRepositoryImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockWeatherInfoRepositoryImpl extends _i1.Mock
    implements _i4.WeatherInfoRepositoryImpl {
  MockWeatherInfoRepositoryImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.WeatherInfoDatasource get datasource => (super.noSuchMethod(
        Invocation.getter(#datasource),
        returnValue: _FakeWeatherInfoDatasource_0(
          this,
          Invocation.getter(#datasource),
        ),
      ) as _i2.WeatherInfoDatasource);
  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.WeatherEntity>>
      getWeatherByCoordinates({required _i8.LatLng? latlng}) =>
          (super.noSuchMethod(
            Invocation.method(
              #getWeatherByCoordinates,
              [],
              {#latlng: latlng},
            ),
            returnValue:
                _i5.Future<_i3.Either<_i6.Failure, _i7.WeatherEntity>>.value(
                    _FakeEither_1<_i6.Failure, _i7.WeatherEntity>(
              this,
              Invocation.method(
                #getWeatherByCoordinates,
                [],
                {#latlng: latlng},
              ),
            )),
          ) as _i5.Future<_i3.Either<_i6.Failure, _i7.WeatherEntity>>);
}
