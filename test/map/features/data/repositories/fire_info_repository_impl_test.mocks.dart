// Mocks generated by Mockito 5.3.2 from annotations
// in free_fire_location/test/map/features/data/repositories/fire_info_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:free_fire_location/core/infra/http_request.dart' as _i2;
import 'package:free_fire_location/features/map/data/datasources/fire_info_datasource_inpe.dart'
    as _i4;
import 'package:free_fire_location/features/map/data/datasources/fire_info_datasource_nasa.dart'
    as _i6;
import 'package:free_fire_location/features/map/data/models/fire_page_response.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeHttpRequest_0 extends _i1.SmartFake implements _i2.HttpRequest {
  _FakeHttpRequest_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFirePageModel_1 extends _i1.SmartFake implements _i3.FirePageModel {
  _FakeFirePageModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [FireInfoDatasourceInpe].
///
/// See the documentation for Mockito's code generation for more information.
class MockFireInfoDatasourceInpe extends _i1.Mock
    implements _i4.FireInfoDatasourceInpe {
  MockFireInfoDatasourceInpe() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.HttpRequest get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeHttpRequest_0(
          this,
          Invocation.getter(#client),
        ),
      ) as _i2.HttpRequest);
  @override
  _i5.Future<_i3.FirePageModel> getFireLocations({required int? amount}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFireLocations,
          [],
          {#amount: amount},
        ),
        returnValue: _i5.Future<_i3.FirePageModel>.value(_FakeFirePageModel_1(
          this,
          Invocation.method(
            #getFireLocations,
            [],
            {#amount: amount},
          ),
        )),
      ) as _i5.Future<_i3.FirePageModel>);
}

/// A class which mocks [FireInfoDatasourceNasa].
///
/// See the documentation for Mockito's code generation for more information.
class MockFireInfoDatasourceNasa extends _i1.Mock
    implements _i6.FireInfoDatasourceNasa {
  MockFireInfoDatasourceNasa() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.HttpRequest get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeHttpRequest_0(
          this,
          Invocation.getter(#client),
        ),
      ) as _i2.HttpRequest);
  @override
  _i5.Future<_i3.FirePageModel> getFireLocations({int? amount = 0}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFireLocations,
          [],
          {#amount: amount},
        ),
        returnValue: _i5.Future<_i3.FirePageModel>.value(_FakeFirePageModel_1(
          this,
          Invocation.method(
            #getFireLocations,
            [],
            {#amount: amount},
          ),
        )),
      ) as _i5.Future<_i3.FirePageModel>);
}
